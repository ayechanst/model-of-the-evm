**Ethereum Protocol Learning Outline**

* 1. Broad Overview
** 1. What is it about?
- The topic is the EVM
- The layperson could not grasp the EVM fully in detail within a few hours, but it is not as complex as nuclear physics
- Someone would need to understand several different things to grasp it fully

** 2. How extensive is the subject?
There are several facets of the Ethereum Protocol
- Blockchains
- Ethereum
- Ether
- Smart Contracts

** 3. What acts as an appropriate starting point? 
Blockchains
* 2. Narrowing the Steps 
How many parts/levels can the EVM be deconstructed into?
** Deconstructing the topic of the Ethereum Protocol
*** The Ethereum Protocol (the blockchain level of things)
**** Blockchains
***** Hash Functions
***** Merkel Trees
***** Accounts
****** User Accounts
****** Contract Accounts
***** Blocks
***** Transactions
Contain 7 sets of values
****** nonce
Every transaction needs to have a unique incrementing nonce
****** gas price
****** start gas
****** to
The address of the account your sending to
****** value
The amount of eth being sent
****** data
Array of bytes readable by the contract code
****** v, r, s
***** Receipts 
Objects that get hashed into the Ethereum blockchain
Every transaction has a receipt
There are 3 sorts:
****** Intermediate state root
****** Cumulative gas used (total gas used for the whole block)
****** Logs
- Inteded to allow efficient light client access to event records
- Append only
- Cannot be visible by contracts
- They are hashed into that block and appear nowhere else
******* Topics (32 bytes)


***** Smart Contracts
**** The EVM
***** Stack
***** Memory
***** Storage
***** Environment Variables
***** Logs
***** Nodes
Every full node on the blockchain processes every transaction and stores the entire state
***** State
Consists of key value mappings from addresses to account objects
mapping(address => account)
****** Two Types of Account Objects
1. Accounts controlled by private key
   - nonce
   - balance
2. Accounts controlled by code
   - nonce
   - balance
   - code hash (code = empty string for private key controlled accounts)
   - storage trie root (entire set of storage for that account)
***** Code Execution
****** Transactions
******* What happens during a transaction?
Every transaction specifies a TO address (unless its creating a contract) its sending to
Two things can happen when sending to a TO address:
1. Destination is an account controlled by code
   This means you are just moving ETH around
2. Destination is an account controlled by code
   This runs the code on that account (see next section)
******* ABI
When you send a transaction, **function calls** get compiled to transaction data
******** Transaction data
- first 4 bytes are function ID
- next 32 bytes are the first argument
- next 32 bytes are the second argument
****** Code
When code is ran it can do 3 things:
1. Send ETH to other contracts
2. Read/write to the contracts storage
3. Call (start execution in another smart contract)
***** Gas
**** Ethereum 
*** Object Oriented Programming
**** Solidity
**** Compiling to byte code
**** Publish the byte code in a transaction going to the blockchain

** Combining theory and application
How is the Ethereum Protocol related to OOP?

* 3. Define Success
The reason for learning about the ethereum protocol is to understand concepts within it quicker, because there is a solid foundation.
You will have succeeded in this when you can explain how things are working within the EVM and in what order, and why.
- What
- Where
- When
- Why
  
* 4. Compiling Resources
https://ethereum.org/developers/docs/intro-to-ethereum










* 5. Create a Curriculum

